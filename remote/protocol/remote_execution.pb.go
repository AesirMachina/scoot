// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/remote_execution.proto

/*
Package protocol is a generated protocol buffer package.

still starting out with a stub.

It is generated from these files:
	protocol/remote_execution.proto

It has these top-level messages:
	RequestPlaceholder
	ResponsePlaceholder
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestPlaceholder struct {
	Input string `protobuf:"bytes,1,opt,name=input" json:"input,omitempty"`
}

func (m *RequestPlaceholder) Reset()                    { *m = RequestPlaceholder{} }
func (m *RequestPlaceholder) String() string            { return proto.CompactTextString(m) }
func (*RequestPlaceholder) ProtoMessage()               {}
func (*RequestPlaceholder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestPlaceholder) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type ResponsePlaceholder struct {
	Output string `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
}

func (m *ResponsePlaceholder) Reset()                    { *m = ResponsePlaceholder{} }
func (m *ResponsePlaceholder) String() string            { return proto.CompactTextString(m) }
func (*ResponsePlaceholder) ProtoMessage()               {}
func (*ResponsePlaceholder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResponsePlaceholder) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestPlaceholder)(nil), "protocol.RequestPlaceholder")
	proto.RegisterType((*ResponsePlaceholder)(nil), "protocol.ResponsePlaceholder")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Execution service

type ExecutionClient interface {
	Execute(ctx context.Context, in *RequestPlaceholder, opts ...grpc.CallOption) (*ResponsePlaceholder, error)
}

type executionClient struct {
	cc *grpc.ClientConn
}

func NewExecutionClient(cc *grpc.ClientConn) ExecutionClient {
	return &executionClient{cc}
}

func (c *executionClient) Execute(ctx context.Context, in *RequestPlaceholder, opts ...grpc.CallOption) (*ResponsePlaceholder, error) {
	out := new(ResponsePlaceholder)
	err := grpc.Invoke(ctx, "/protocol.Execution/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Execution service

type ExecutionServer interface {
	Execute(context.Context, *RequestPlaceholder) (*ResponsePlaceholder, error)
}

func RegisterExecutionServer(s *grpc.Server, srv ExecutionServer) {
	s.RegisterService(&_Execution_serviceDesc, srv)
}

func _Execution_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlaceholder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Execution/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionServer).Execute(ctx, req.(*RequestPlaceholder))
	}
	return interceptor(ctx, in, info, handler)
}

var _Execution_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Execution",
	HandlerType: (*ExecutionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _Execution_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocol/remote_execution.proto",
}

func init() { proto.RegisterFile("protocol/remote_execution.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x2f, 0x4a, 0xcd, 0xcd, 0x2f, 0x49, 0x8d, 0x4f, 0xad, 0x48, 0x4d,
	0x2e, 0x2d, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0xcb, 0x08, 0x71, 0xc0, 0x14, 0x28, 0x69, 0x71, 0x09,
	0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x04, 0xe4, 0x24, 0x26, 0xa7, 0x66, 0xe4, 0xe7, 0xa4,
	0xa4, 0x16, 0x09, 0x89, 0x70, 0xb1, 0x66, 0xe6, 0x15, 0x94, 0x96, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0x41, 0x38, 0x4a, 0xba, 0x5c, 0xc2, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0xc8, 0x8a, 0xc5, 0xb8, 0xd8, 0xf2, 0x4b, 0x4b, 0x10, 0xaa, 0xa1, 0x3c, 0xa3, 0x50, 0x2e, 0x4e,
	0x57, 0x98, 0xbd, 0x42, 0x1e, 0x5c, 0xec, 0x10, 0x4e, 0xaa, 0x90, 0x8c, 0x1e, 0xcc, 0x76, 0x3d,
	0x4c, 0xab, 0xa5, 0x64, 0x91, 0x65, 0x31, 0x2c, 0x53, 0x62, 0x48, 0x62, 0x03, 0xcb, 0x1b, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x27, 0xfa, 0xb0, 0x18, 0xe5, 0x00, 0x00, 0x00,
}
